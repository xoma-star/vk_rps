{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","IconSad","p","xmlns","aria-hidden","focusable","width","size","height","viewBox","d","fill","cx","cy","r","x","y","IconClown","rx","ry","IconRobot","opacity","Main","props","urls","setActiveModal","e","setState","activeModal","round","state","activePanel","leftHand","rightHand","userScore","botScore","jopa","bind","bridge","send","then","userAva","photo_200","userName","first_name","this","$","removeClass","setTimeout","addClass","botChoice","min","max","rand","Math","random","randInt","userChoice","won","winLose","onClose","id","icon","header","caption","modal","expandable","before","onClick","left","className","style","borderRadius","padding","paddingTop","mode","marginTop","src","alt","transition","transform","vertical","React","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.520430f7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport $ from 'jquery';\nimport {\n    View,\n    Panel,\n    PanelHeader,\n    Cell,\n    Group,\n    PanelHeaderBack,\n    Card, CardGrid, Avatar, Button, Header, FixedLayout, ModalRoot, ModalCard\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28BrainOutline from '@vkontakte/icons/dist/28/brain_outline';\nimport bridge from '@vkontakte/vk-bridge';\n\nfunction randInt(min, max) {\n    // получить случайное число от (min-0.5) до (max+0.5)\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n}\n\nconst IconSad = (p) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" width={p.size} height={p.size} viewBox=\"0 0 64 64\">\n            <path d=\"M2.5 37.2c2.9 16.3 18.4 27.2 34.8 24.3c16.3-2.9 27.2-18.4 24.3-34.8C58.7 10.5 43.1-.4 26.8 2.5C10.5 5.3-.4 20.9 2.5 37.2\" fill=\"#ffdd67\"/>\n            <g fill=\"#664e27\">\n                <circle cx=\"42.4\" cy=\"24.7\" r=\"5\"/>\n                <circle cx=\"19.7\" cy=\"28.7\" r=\"5\"/>\n                <path d=\"M43.3 41.8c-5.8-1.5-12-.4-16.9 3c-1.2.9 1.1 4 2.3 3.2c3.2-2.3 8.4-3.8 13.7-2.4c1.3.3 2.4-3.3.9-3.8\"/>\n            </g>\n            <rect x=\"0\" y=\"0\" width=\"64\" height=\"64\" fill=\"rgba(0, 0, 0, 0)\" />\n        </svg>\n    )\n}\n\nconst IconClown = (p) => {\n     return (\n         <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\" width={p.size} height={p.size} viewBox=\"0 0 64 64\">\n             <path d=\"M62 27.2c0-3-1.5-5.6-3.9-7.1c.3-.9.5-1.9.5-2.9c0-4.7-3.7-8.6-8.3-8.7C49 6 46.4 4.2 43.4 4.2c-1.5 0-2.9.4-4.1 1.2C37.8 3.4 35.1 2 32 2c-3.1 0-5.8 1.4-7.4 3.4c-1.2-.8-2.6-1.2-4.1-1.2c-3 0-5.6 1.7-6.9 4.3c-4.6.1-8.3 3.9-8.3 8.7c0 1 .2 2 .5 2.9C3.5 21.6 2 24.2 2 27.2c0 2 .7 3.9 1.9 5.4c-.5 1-.8 2.1-.8 3.3c0 2.7 1.5 5.1 3.7 6.3c0 .3-.1.5-.1.8c0 3.9 3.1 7.1 6.9 7.1h36.7c3.8 0 6.9-3.2 6.9-7.1v-.8c2.2-1.2 3.7-3.6 3.7-6.3c0-1.2-.3-2.3-.8-3.3c1.2-1.5 1.9-3.3 1.9-5.4\" fill=\"#42ade2\"/>\n             <path d=\"M51.8 35c-.1.9-.3 1.8-.6 2.3c-.5.9-1.4 1.4-1.4 1.4s.3-.9.2-3.4c-1.3-19.9-3.7-11-17.9-11s-16.6-8.9-17.9 11c-.1 2.5.2 3.4.2 3.4s-.9-.5-1.4-1.4c-.3-.5-.4-1.3-.6-2.3c-1.5-.4-3.5-.1-3.5 4.3c0 2.7 1 5 4.4 5.2c1.4 11 5.7 12.8 14.3 16.7c2.3 1 6.9 1 9.1 0c8.6-3.9 12.9-5.7 14.3-16.7c3.4-.2 4.4-2.5 4.4-5.2c-.2-4.4-2.1-4.7-3.6-4.3\" fill=\"#fed0ac\"/>\n             <path d=\"M49.1 35.5c-1.3-19.2-3.5-9.9-17.1-9.9s-15.8-9.3-17.1 9.9c-.1 2.4.4 6.7.7 8.9c.8 5.2 3.9 12.2 12 16c2.2 1 6.6 1 8.7 0c8.2-3.7 11.3-10.8 12-16c.4-2.3.9-6.6.8-8.9\" fill=\"#f5f5f5\"/>\n             <path d=\"M41.2 49.3c-3.8 3.9-3.3 8.8-9.2 8.8c-5.9 0-5.4-4.9-9.2-8.8c-3.7-3.9 5.1.5 9.2.5s12.9-4.4 9.2-.5\" fill=\"#574137\"/>\n             <path d=\"M38.9 48.2L32 49.8l-6.9-1.6s-.2 1.6.5 2.3c1 1 4.8 1.5 6.5 1.5c1.7 0 5.4-.5 6.5-1.5c.5-.6.3-2.3.3-2.3\" fill=\"#fff\"/>\n             <path d=\"M32 55.1c-2.8 0-3.7 2-3.7 2l3.7.6l3.7-.6s-.9-2-3.7-2\" fill=\"#ff717f\"/>\n             <path d=\"M32 49c-2.3 0-15.8-5-9.9.6c3.2 3 3.2 10 9.9 10s6.7-6.9 9.9-10c5.9-5.6-7.6-.6-9.9-.6m7.9 1.1c-3.3 3.3-2.8 7.3-7.9 7.4c-5.1 0-4.6-4.1-7.9-7.4c-3.2-3.2 4.4.4 7.9.4s11.1-3.7 7.9-.4\" fill=\"#cf4350\"/>\n             <circle cx=\"32\" cy=\"43.4\" r=\"6.6\" fill=\"#ff5263\"/>\n             <path d=\"M27 35.8c0 2.9-8 2.9-8 0c0-9.9 8-9.9 8 0\" fill=\"#f5f5f5\"/>\n             <path d=\"M27.7 36.2c0 3.7-10 3.7-10 0c0-12.3 10-12.3 10 0\" fill=\"#3e4347\"/>\n             <path d=\"M27.4 36.3c0 2.9-8 2.9-8 0c0-9.9 8-9.9 8 0\" fill=\"#f5f5f5\"/>\n             <ellipse cx=\"23.7\" cy=\"34.5\" rx=\"2.5\" ry=\"3.5\" fill=\"#0a84a5\"/>\n             <circle cx=\"23.7\" cy=\"34.5\" r=\".8\" fill=\"#231f20\"/>\n             <path d=\"M36.3 36.2c0 3.7 10 3.7 10 0c0-12.3-10-12.3-10 0\" fill=\"#3e4347\"/>\n             <path d=\"M36.6 36.3c0 2.9 8 2.9 8 0c0-9.9-8-9.9-8 0\" fill=\"#f5f5f5\"/>\n             <ellipse cx=\"40.3\" cy=\"34.5\" rx=\"2.5\" ry=\"3.5\" fill=\"#0a84a5\"/>\n             <circle cx=\"40.3\" cy=\"34.5\" r=\".8\" fill=\"#231f20\"/>\n             <rect x=\"0\" y=\"0\" width=\"64\" height=\"64\" fill=\"rgba(0, 0, 0, 0)\" />\n         </svg>\n     )\n}\n\nconst IconRobot = (p) => {\n    return (<svg xmlns=\"http://www.w3.org/2000/svg\"  aria-hidden=\"true\" focusable=\"false\" width={p.size} height={p.size} viewBox=\"0 0 64 64\">\n        <path d=\"M57.6 13.7c-.7-1-1.6-1.7-2.7-2.2c-3.4-1.7-11.6-1.3-12.3-5.7c-.9-5.7-5.9.1-6.8.1c-1.1 0-1.6-3.9-3.7-3.9c-2.2 0-2.7 3.9-3.7 3.9c-.9 0-5.9-5.8-6.8-.1c-.7 4.3-9 4-12.3 5.7c-1 .5-2 1.2-2.7 2.2c-.5.8.6 1.6 1.2.9c1.6-2 4.8-2.4 7.1-2.8c1.9-.4 4-.6 5.9-1.4c2.6-1 2.5-4.9 3.3-4.9c.6 0 2.7 3 4.5 3c1.6 0 2.6-3.7 3.5-3.7c.9 0 1.9 3.7 3.5 3.7c1.9 0 4-3 4.6-3c.8 0 .7 3.9 3.3 4.9c1.8.8 3.9 1 5.9 1.4c2.3.5 5.6.8 7.1 2.8c.5.7 1.6-.2 1.1-.9\" fill=\"#00b9f1\"/>\n        <path d=\"M53 57c0 2.8-2.2 5-5 5H16c-2.8 0-5-2.2-5-5V36h42v21z\" fill=\"#89967a\"/>\n        <path d=\"M32 12c-15.5 0-21 8.5-21 24v21h42V36c0-15.5-5.5-24-21-24\" fill=\"#b6c4a7\"/>\n        <g fill=\"#89967a\">\n            <path d=\"M11 55c-1.1 0-2-1.2-2-2.6v-6.8c0-1.4.9-2.6 2-2.6v12\"/>\n            <path d=\"M53 43c1.1 0 2 1.2 2 2.6v6.8c0 1.4-.9 2.6-2 2.6V43\"/>\n        </g>\n        <g fill=\"#3e4347\">\n            <path d=\"M7 20H5v30h4v-2H7z\"/>\n            <path d=\"M57 20v28h-2v2h4V20z\"/>\n        </g><circle cx=\"58\" cy=\"20\" r=\"4\" fill=\"#00b9f1\"/>\n        <circle cx=\"6\" cy=\"20\" r=\"4\" fill=\"#ff5263\"/>\n        <path d=\"M21.5 39.5c-4.4 0-8-3.6-8-8s3.6-8 8-8s8 3.6 8 8s-3.6 8-8 8\" fill=\"#efffd9\"/>\n        <circle cx=\"21.5\" cy=\"31.5\" r=\"6\" fill=\"#545b61\"/>\n        <circle cx=\"21.5\" cy=\"31.5\" r=\"2.3\" fill=\"#ff5263\"/>\n        <path d=\"M42.5 39.5c-4.4 0-8-3.6-8-8s3.6-8 8-8s8 3.6 8 8s-3.6 8-8 8\" fill=\"#efffd9\"/>\n        <path d=\"M42.5 37.5c-3.3 0-6-2.7-6-6s2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6\" fill=\"#545b61\"/>\n        <circle cx=\"42.5\" cy=\"31.5\" r=\"2.3\" fill=\"#ff5263\"/>\n        <path d=\"M19.8 54.1c-7.4 0-7.4-13 0-13h24.5c7.4 0 7.4 13 0 13H19.8\" fill=\"#efffd9\"/>\n        <path d=\"M20.5 52.6c-6 0-6-10 0-10h23c6 0 6 10 0 10h-23\" fill=\"#89967a\"/>\n        <g opacity=\".7\" fill=\"#3e4347\">\n            <path d=\"M21.2 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n            <path d=\"M25.9 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n            <path d=\"M30.6 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n            <path d=\"M35.4 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n            <path d=\"M40.1 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n            <path d=\"M44.8 50.7c0 1.2-2 1.2-2 0v-6.1c0-1.2 2-1.2 2 0v6.1\"/>\n        </g><circle cx=\"32\" cy=\"37\" r=\"2\" fill=\"#f5f5f5\"/>\n        <path fill=\"#545b61\" d=\"M30.316 35.862l.566-.565l2.828 2.828l-.565.566z\"/>\n        <rect x=\"0\" y=\"0\" width=\"64\" height=\"64\" fill=\"rgba(0, 0, 0, 0)\" />\n    </svg>)\n}\n\nclass Main extends React.Component {\n    urls = [\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/apple/237/raised-fist_270a.png',\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/apple/237/victory-hand_270c.png',\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/apple/237/raised-hand_270b.png'\n    ];\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activePanel: 'menu',\n            leftHand: 0,\n            rightHand: 0,\n            userScore: 0,\n            botScore: 0,\n            activeModal: null,\n            round: false\n        }\n        this.jopa = this.jopa.bind(this);\n    }\n\n    componentDidMount() {\n        bridge.send(\"VKWebAppInit\", {}).then(\n            r => {\n                bridge.send(\"VKWebAppGetUserInfo\", {}).then(\n                    r => this.setState({\n                        userAva: r.photo_200,\n                        userName: r.first_name\n                    })\n                )\n            }\n    );\n    }\n\n    jopa(e){\n        if (this.state.round){\n            return;\n        }\n        $('.left_hand,.right_hand').removeClass('animated');\n        setTimeout(() => {\n            $('.left_hand,.right_hand').addClass('animated');\n        }, 5);\n        this.setState({\n            leftHand: 0,\n            rightHand: 0,\n            round: true\n        });\n        setTimeout(() => {\n            let botScore = this.state.botScore;\n            let userScore = this.state.userScore;\n            let botChoice = randInt(0,2);\n            let userChoice = e;\n\n            switch (userChoice) {\n                case 0:\n                    switch (botChoice) {\n                        case 1:\n                            userScore++;\n                            break;\n                        case 2:\n                            botScore++;\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 1:\n                    switch (botChoice) {\n                        case 2:\n                            userScore++;\n                            break;\n                        case 0:\n                            botScore++;\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 2:\n                    switch (botChoice) {\n                        case 0:\n                            userScore++;\n                            break;\n                        case 1:\n                            botScore++;\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n            }\n            let round;\n            if (userScore >= 2 || botScore >= 2){\n                round = true;\n            }\n            else{\n                round = false;\n            }\n            this.setState({\n                leftHand: botChoice,\n                rightHand: userChoice,\n                userScore: userScore,\n                botScore: botScore,\n                round: round\n            });\n            $('.test').addClass('hidden');\n            setTimeout(() => {\n                $('.test2').removeClass('hidden');\n            }, 200);\n            setTimeout(() => {\n                $('.test2').addClass('hidden');\n                $('.test').removeClass('hidden');\n                if (this.state.userScore >= 2 || this.state.botScore >= 2){\n                    let won;\n                    if (this.state.userScore >= 2){\n                        won = 'userWon';\n                    }\n                    else{\n                        won = 'botWon';\n                    }\n                    this.setState({\n                        userScore: 0,\n                        botScore: 0,\n                        activeModal: won\n                    });\n                }\n                //this.jopa();\n                this.setState({\n                    leftHand: 0,\n                    rightHand: 0\n                });\n            }, 2000);\n        }, 0.6*2.85*1000)\n    }\n\n    setActiveModal = (e) => {\n        this.setState({\n            activeModal: e,\n            round: false\n        })\n    }\n\n    render() {\n        const winLose = (\n            <ModalRoot activeModal={this.state.activeModal}\n                       onClose={() => this.setActiveModal(null)}>\n                <ModalCard\n                    id=\"userWon\"\n                    onClose={() => this.setActiveModal(null)}\n                    icon={<IconClown size={128}/>}\n                    header=\"Победа\"\n                    caption=\"Можем повторить\"\n                    // actions={[{\n                    //     title: 'Попробовать',\n                    //     mode: 'primary',\n                    //     action: () => {\n                    //         this.setActiveModal(null);\n                    //     }\n                    // }]}\n                >\n                </ModalCard>\n                <ModalCard\n                    id=\"botWon\"\n                    onClose={() => this.setActiveModal(null)}\n                    icon={(\n                        <IconSad size={128}/>\n                    )}\n                    header=\"Проиграл\"\n                    caption=\"лох\"\n                    // actions={[{\n                    //     title: 'Попробовать',\n                    //     mode: 'primary',\n                    //     action: () => {\n                    //         this.setActiveModal(null);\n                    //     }\n                    // }]}\n                >\n                </ModalCard>\n            </ModalRoot>\n        );\n        return (\n            <View activePanel={this.state.activePanel} id=\"menu\" modal={winLose}>\n                <Panel id=\"menu\">\n                    <PanelHeader>КНБ</PanelHeader>\n                    <Group>\n                        <Cell expandable before={<Icon28BrainOutline/>} onClick={() => this.setState({activePanel: 'with_bot'})}>Против бота</Cell>\n                    </Group>\n                </Panel>\n                <Panel id=\"with_bot\">\n                    <PanelHeader left={<PanelHeaderBack onClick={() => this.setState({ activePanel: 'menu' })}/>}>Против бота</PanelHeader>\n                    <Group>\n                        <CardGrid className=\"battle_avas\" style={{borderRadius: 5, padding: 10}}>\n                            <Card size=\"l\">\n                                <Card style={{paddingTop: 15}} className=\"text-middle\" size=\"s\">\n                                    <div className=\"test\">\n                                        <IconRobot size={48}/>\n                                        <Header className=\"no-flex\" mode=\"secondary\">полный лох</Header>\n                                    </div>\n                                    <div className=\"test2 hidden\">{this.state.botScore}</div>\n                                </Card>\n                                <Card style={{marginTop: 42}} className=\"text-middle\" size=\"s\">\n                                    <Header className=\"no-flex\" mode=\"secondary\">против</Header>\n                                </Card>\n                                <Card style={{paddingTop: 15}} className=\"text-middle\" size=\"s\">\n                                    <div className=\"test\">\n                                        <Avatar src={this.state.userAva ? this.state.userAva : 'https://vk.com/images/camera_200.png'}/>\n                                        <Header className=\"no-flex\" mode=\"secondary\">{this.state.userName ? this.state.userName : 'тоже лох'}</Header>\n                                    </div>\n                                    <div className=\"test2 hidden\">{this.state.userScore}</div>\n                                </Card>\n                            </Card>\n                            <div className=\"clear-fix\"/>\n                        </CardGrid>\n                    </Group>\n                    <Group style={{padding: 30}}>\n                        <img className=\"left left_hand\" alt=\"hui jopa pidaraz\" src={this.urls[this.state.leftHand]}/>\n                        <img className=\"right right_hand\" alt=\"hui jopa pidaraz\" src={this.urls[this.state.rightHand]}/>\n                        <div className=\"clear-fix\"/>\n                    </Group>\n                    <FixedLayout style={\n                        this.state.round ? {\n                            transition: '.2s',\n                            transform: 'translateY(100%)'\n                        } : {\n                            transition: '.2s'\n                        }\n                    } vertical=\"bottom\">\n                        <CardGrid className=\"battle_avas\" style={{borderRadius: 5, padding: 10}}>\n                            <Card size=\"l\">\n                                <Card className=\"text-middle\" size=\"s\">\n                                    <img onClick={() => {this.jopa(0)}} className=\"selectHand\" alt=\"jopa\" src={this.urls[0]}/>\n                                </Card>\n                                <Card className=\"text-middle\" size=\"s\">\n                                    <img onClick={() => {this.jopa(1)}} className=\"selectHand\" alt=\"jopa\" src={this.urls[1]}/>\n                                </Card>\n                                <Card className=\"text-middle\" size=\"s\">\n                                    <img onClick={() => {this.jopa(2)}} className=\"selectHand\" alt=\"jopa\" src={this.urls[2]}/>\n                                </Card>\n                            </Card>\n                            <div className=\"clear-fix\"/>\n                        </CardGrid>\n                    </FixedLayout>\n                </Panel>\n            </View>\n        )\n    }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Main/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAd\nserviceWorker.unregister();\n"],"sourceRoot":""}